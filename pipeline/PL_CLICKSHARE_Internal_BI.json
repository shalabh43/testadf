{
	"name": "PL_CLICKSHARE_Internal_BI",
	"properties": {
		"activities": [
			{
				"name": "DRS_AzureSqlServer_CopyActivity0L2L",
				"description": "This activity fetches the data for product team ENTCS and copies it to Azure SQL database.",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "fetchIamToken",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "RestSource",
						"httpRequestTimeout": "00:10:40",
						"requestInterval": "00.00:00:00.010",
						"requestMethod": "GET",
						"additionalHeaders": {
							"Authorization": {
								"value": "@concat('Bearer ',activity('fetchIamToken').output.access_token)",
								"type": "Expression"
							}
						},
						"paginationRules": {
							"supportRFC5988": "true",
							"QueryParameters.{offset}": "RANGE:0:200000:5000"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"preCopyScript": "IF OBJECT_ID(N'dbo.DeviceOverview_Clickshare_New', N'U') IS NULL\nBEGIN\nCREATE TABLE [dbo].[DeviceOverview_Clickshare_New](\n\t[article] [nvarchar](200) NULL,\n\t[serial] [nvarchar](200) NULL,\n\t[type] [nvarchar](200) NULL,\n\t[status] [nvarchar](200) NULL,\n\t[softwareVersion] [nvarchar](200) NULL,\n\t[latestConnectionDate] [datetime2](7) NULL,\n\t[hwCoverageEnd] [date] NULL,\n\t[hwCoverageExpired] [nvarchar](200) NULL,\n\t[soldToAccountId] [nvarchar](200) NULL,\n\t[soldToAccountName] [nvarchar](200) NULL,\n\t[customerAccount] [nvarchar](200) NULL,\n\t[country] [nvarchar](200) NULL,\n\t[deviceFriendlyName] [nvarchar](200) NULL,\n\t[warrantyEnd] [date] NULL,\n\t[warrantyExpired] [nvarchar](200) NULL,\n\t[serviceContract] [nvarchar](200) NULL,\n\t[serviceContractEnd] [date] NULL,\n\t[registrationDate] [datetime2](7) NULL,\n\t[accountId] [nvarchar](200) NULL,\n\t[deviceId] [nvarchar](200) NULL,\n\t[meetingRoom] [nvarchar](200) NULL,\n\t[location] [nvarchar](200) NULL,\n\t[shippingDate] [date] NULL,\n\t[cloudServiceLevel] [nvarchar](200) NULL,\n\t[productLine] [nvarchar](200) NULL,\n\t[productTeam] [nvarchar](200) NULL,\n\t[productCategory] [nvarchar](200) NULL\t\n) ON [PRIMARY] \nEND\nELSE\nBEGIN\nTRUNCATE TABLE  [dbo].[DeviceOverview_Clickshare_New]\nEND",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false,
						"disableMetricsCollection": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"path": "['article']"
								},
								"sink": {
									"name": "article",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['serial']"
								},
								"sink": {
									"name": "serial",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['type']"
								},
								"sink": {
									"name": "type",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['status']"
								},
								"sink": {
									"name": "status",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['softwareVersion']"
								},
								"sink": {
									"name": "softwareVersion",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['latestConnectionDate']"
								},
								"sink": {
									"name": "latestConnectionDate",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['hwCoverageEnd']"
								},
								"sink": {
									"name": "hwCoverageEnd",
									"type": "DateTime"
								}
							},
							{
								"source": {
									"path": "['hwCoverageExpired']"
								},
								"sink": {
									"name": "hwCoverageExpired",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['soldToAccountId']"
								},
								"sink": {
									"name": "soldToAccountId",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['soldToAccountName']"
								},
								"sink": {
									"name": "soldToAccountName",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['customerAccount']"
								},
								"sink": {
									"name": "customerAccount",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['country']"
								},
								"sink": {
									"name": "country",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['deviceFriendlyName']"
								},
								"sink": {
									"name": "deviceFriendlyName",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['warrantyEnd']"
								},
								"sink": {
									"name": "warrantyEnd",
									"type": "DateTime"
								}
							},
							{
								"source": {
									"path": "['warrantyExpired']"
								},
								"sink": {
									"name": "warrantyExpired",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['serviceContract']"
								},
								"sink": {
									"name": "serviceContract",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['serviceContractEnd']"
								},
								"sink": {
									"name": "serviceContractEnd",
									"type": "DateTime"
								}
							},
							{
								"source": {
									"path": "['registrationDate']"
								},
								"sink": {
									"name": "registrationDate",
									"type": "DateTime"
								}
							},
							{
								"source": {
									"path": "['accountId']"
								},
								"sink": {
									"name": "accountId",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['deviceId']"
								},
								"sink": {
									"name": "deviceId",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['meetingRoom']"
								},
								"sink": {
									"name": "meetingRoom",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['location']"
								},
								"sink": {
									"name": "location",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['productLine']"
								},
								"sink": {
									"name": "productLine",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['productTeam']"
								},
								"sink": {
									"name": "productTeam",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['productCategory']"
								},
								"sink": {
									"name": "productCategory",
									"type": "String"
								}
							}
						],
						"collectionReference": "$['deviceList']",
						"mapComplexValuesToString": true
					}
				},
				"inputs": [
					{
						"referenceName": "ds_drs_devices_endpoint_clickshare_0k_5k",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "ds_azureSqlDb_deviceOverview_clickshare",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "fetchIamToken",
				"type": "WebActivity",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": "https://iam.cmp.barco.com/auth/realms/EDP/protocol/openid-connect/token",
					"method": "POST",
					"headers": {
						"Content-Type": "application/x-www-form-urlencoded",
						"Authorization": "Basic aW90LnNlcnZpY2U6MGFlN2FmYzMtNTU5MS00OTg3LWIwYTMtYmZhN2JjYWU0MzU1"
					},
					"body": "username=svc.iot.configuration&password=Wd50jt04suk02v72&scope=cmp.de.drs.device.read&grant_type=password"
				}
			}
		],
		"annotations": [],
		"lastPublishTime": "2022-11-07T03:41:38Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}